//////////////////////
///// SCROLLBARS /////
//////////////////////


* {
    box-sizing: border-box;
}

::-moz-selection {
    background-color: $primary;
    color: $white;
}

::selection {
    background-color: $primary;
    color: $white;
}

::-webkit-selection {
    background-color: $primary;
    color: $white;
}

::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-track {
    background-color: $white;
}

::-webkit-scrollbar-thumb {
    background-color: darken($light, 10%);
    transition: background-color $fast $bezier;
}

::-webkit-scrollbar-thumb:hover {
    background-color: $primary;
}

::-webkit-scrollbar-button {
    background-color: darken($light, 20%);
}

//////////////////////////
/////// FONT FACES ///////
//////////////////////////

@font-face {
    font-family: 'Bebas';
    font-style: normal;
    src: url('../static/fonts/BebasNeue-Regular.ttf') format('truetype');
    font-display: swap;
}

@font-face {
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 400;
    src: url('../static/fonts/MontserratAlternates-Regular.ttf') format('truetype');
    font-display: swap;
}

@font-face {
    font-family: 'Montserrat';
    font-style: italic;
    font-weight: 400;
    src: url('../static/fonts/MontserratAlternates-Italic.ttf') format('truetype');
    font-display: swap;
}

@font-face {
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 600;
    src: url('../static/fonts/MontserratAlternates-Bold.ttf') format('truetype');
    font-display: swap;
}

@font-face {
    font-family: 'Montserrat';
    font-style: italic;
    font-weight: 600;
    src: url('../static/fonts/MontserratAlternates-BoldItalic.ttf') format('truetype');
    font-display: swap;
}

// Page menu
.page-template-page-menu {
    object {
        display: block;
        width: 100vw;
        height: 100vh;
        background-color: $dark;
    }
}

///////////////////////////
///// VIDEOS & IMAGES /////
///////////////////////////

img, figure, video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    margin: 0;

    &.contain {
        object-fit: contain;
    }
}

svg {
    display: block;
    width: 100%;
    box-sizing: border-box;
}

.imgWrap, .vidWrap {

    max-height: 70vh;
    
    &:not(.imgWrap--seamless) {
        overflow: hidden;
        box-shadow: $shadow;
    }
}

.imgWrap {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;

    &--portrait {

        &-bg {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            // z-index: -1;
            pointer-events: none;

            object-fit: cover;
            transform: scale(1.1);
            filter: blur(4rem) brightness(1.2);
        }

        figure {
            position: relative;
            z-index: 5;

            img {
                object-fit: contain!important;
                z-index: 2;
            }
        } 
    }
}

.vidWrap {
    position: relative;
    width: 100%;
    height: 100%;

    .imgWrap {
        pointer-events: none;
        z-index: 1;

        left: 0;
        top: 0;
        position: absolute;

        opacity: 0;

        transition: opacity $fast $bezier;
    }

    $sp : $video-sm-spacing;
    &-controls {
        transform: scale(.9);
        opacity: 0;
        pointer-events: none;
        transition: all $fast $bezier;

        position: absolute;
        bottom: 0;
        left: 0;

        display: flex;
        align-items: center;
        height: 3rem;
        width: calc(100% - ($sp * 2));

        margin: $sp;
        background-color: $white;

        overflow: hidden;

        button {
            @keyframes btn-fade-in {
                from { opacity: 0; transform: scale(0.4); }
                to { opacity: 1; transform: scale(1); }
            }

            display: flex;
            align-items: center;
            justify-content: center;

            min-width: 3rem;
            min-height: 3rem;

            color: $secondary;

            svg {
                transform: scale(1);
                transition: all $superfast $bezier;
                
                animation: btn-fade-in $fast $bezier;
            }

            &:active svg {
                transform: scale(0.75);
            }

            &.playpause {
                background-color: $primary;
                color: $white;

                &[data-state="play"] { svg.pause-icon { display: none; } }
                &[data-state="pause"] { svg.play-icon { display: none; } }
            }

            &.mute {
                &[data-state="mute"] { svg.unmute-icon { display: none; } }
                &[data-state="unmute"] { svg.mute-icon { display: none; } }
            }
        }

        .progress {
            display: flex;
            align-items: center;

            width: 100%;
            height: 100%;
            border-left: 1px solid $light;
            border-right: 1px solid $light;

            
            progress[value] {
                position: relative;
                overflow: hidden;

                -webkit-appearance: none;
                appearance: none;

                width: 100%;

                margin-left: 1rem;
                margin-right: 1rem;    
                
                height: 0.75rem;
                background-color: darken($light, 20%);
    
                &::-webkit-progress-bar {
                    width: 100%;
                    background-color: $light;
                }

                &::-webkit-progress-value {
                    background-image:
                        -webkit-linear-gradient(-45deg, 
                                                transparent 33%, rgba(0, 0, 0, .1) 33%, 
                                                rgba(0,0, 0, .1) 66%, transparent 66%),
                        -webkit-linear-gradient(left, $primary, $primary);
                
                    background-size: 35px 20px, 100% 100%, 100% 100%;
                }
            }
        }

    }

    &:hover {
        .vidWrap-controls {
            transform: scale(1);
            opacity: 1;
            pointer-events: all;
        }
    }

    &:before, &:after {
        content: "";
        position: absolute;
        display: block;
        opacity: 0;

        position: absolute;
        pointer-events: none;
        z-index: 2;

        transition: all $fast $bezier
    }

    &:after {
        background-image: url('../static/icons/loading.svg');
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
        width: 3rem;
        height: 3rem;

        top: calc(50% - 1.5rem);
        left: calc(50% - 1.5rem);

        color: $primary;
    }

    &:before {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-color: #00000000;
    }

    &.progress-loading {
        .progress progress {
            pointer-events: none;
            animation: progress-bar-loading 2s $bezier infinite;
        }
    }

    &.loading {

        .imgWrap {
            opacity: 1;
        }

        &:before, &:after {
            opacity: 1;
        }

        &::after {
            animation: loading 0.8s steps(8) infinite;
        }

        &::before {
            background-color: #000000b2;
        }
    }
}


///////////////////////////
///// RANDOM ELEMENTS /////
///////////////////////////

.admin-msg {
    color: red;
} 

.lines {
    position: relative;
    &::before, &::after {
        content: "";
        display: block;
        position: absolute;
        z-index: -5;

        $wdt : 5px;
        $c : $dark;
        background: repeating-linear-gradient(
            -45deg, 
            transparent, 
            transparent $wdt,
            $c $wdt,
            $c calc($wdt * 1.4),
            transparent calc($wdt * 1.4)
        );   
        
        opacity: .1;
    }
}

.lines {
    // Lines        
    &::before {
        clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
        transition: clip-path $on-scroll $ease-both;
        transition-delay: $on-scroll * 0.75;
    }

    &::after {
        clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
        transition: clip-path $on-scroll $ease-both;
        transition-delay: $on-scroll;
    }
} 

// Animations
.hidden-animate {
    .lines {
        // Lines        
        &::before {
            clip-path: polygon(100% 0, 100% 0, 100% 0, 100% 0);
        }

        &::after {
            clip-path: polygon(100% 0, 100% 0, 100% 0, 100% 0);
        }
    }       
}

// General

.ctn {
    max-width: 550px;

    &-title {
        
        white-space: nowrap;

        &-main {

            width: auto;
            display: flex;
            align-items: center;
            
            &::after {
                content: "";

                margin-top: -0.4rem;
                margin-left: 1.25rem;

                width: 100%;
                height: 0.35rem;
                
                background-color: $primary;
                clip-path: polygon(100% 100%, 100% 0, 0 0, 0 100%);

                transition: clip-path $on-scroll $ease-both;
            }
        }
    }

    .btn-group {
        .btn {

            transform: translateX(0);
            opacity: 1;
            transition-duration: $on-scroll;
            transition-timing-function: $ease-both;

            &:first-child {
                transition-delay: $on-scroll * 0.1;
            }

            &:last-child {
                transition-delay: $on-scroll * 0.2;
            }
        }
    }
}

// Textual content animations
@media (min-width : map-get($breakpoints, lg)) {
    .hidden-animate {
        .ctn {

            &-title-main::after {
                clip-path: polygon(100% 100%, 100% 0, 100% 0, 100% 100%);
            }

            .btn-group .btn {
                transform: translateX(-3rem);
                opacity: 0;
            }
        }
    }
}



.wysiwyg {
    *:last-child {
        margin-bottom: 0;
    }
}

main {
    position: relative;
    overflow: hidden;
    width: 100%;
}

// Backgorunds
.bg {

    position: absolute;
    width: 100%;
    z-index: -10;

    &-light { background-color: $light; }

    &-illu-top .bg, &-illu-bottom .bg {
        height: 150%;

        img { 
            position: absolute;
            width: 100%;
            object-position: contain;
            opacity: .04; 
        }
        background: transparent!important;
    }

    &-illu-top .bg img {
        transform: rotate(180deg);
    }
}

// Section's separations
.sep {

    &::after { content: ""; position: absolute; display: block; left: 0; width: 100%; height: 25%; pointer-events: none; }
    &-grad-top::after { 
        top: 0;
        background: linear-gradient(to bottom, $sep-grad, transparent);
    }
    &-grad-bottom::after { 
        bottom: 0;
        background: linear-gradient(to top, $sep-grad, transparent);
    }
    &-grad-top-bottom::after { 
        height: 100%;
        bottom: 0;
        background: linear-gradient(to top, $sep-grad 0%, transparent 25%, transparent 75%, $sep-grad 100%);
    }

    .wrapper {
        position: relative;
        z-index: 1;
    }

    &-border::after {

        width: calc(100vw - map-get($sec-spacings, sm-x) * 2);
        height: 0.2rem;
        background-color: $light;
        left: map-get($sec-spacings, sm-x);

        &-bottom::after {
            bottom: 0;
        }

        &-top::after {
            top: 0;
        }
    }
}

// Icon size
.icon, .icon > svg {
    width: $icon-size-sm;
    height: $icon-size-sm;
}

// Link with an icon in it
.link-icon {
    font-size: 1rem;
    font-weight: 700;
    
    .icon, svg {
        display: inline-block;
        vertical-align: 5%;
        width: $icon-size-sm;
        min-width: $icon-size-sm;
        height: $icon-size-sm;
        min-height: $icon-size-sm;
        margin-bottom: -0.35rem;
        margin-right: 0.5rem;

        color: $primary;
    }

    &--primary {
        color: $primary;
    }
}

//lists
$sp : $list-sm-gap;
.list {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: $sp;
}

// Social links list
$sp : $card-sm-spacing;
.social-links {

    display: flex;
    gap: $sp  * 0.5;
    flex-wrap: wrap;

    margin-top: $sp;
    margin-left: -0.5rem;

    &-item {
        a {
            display: block;
            padding: 0.5rem;
            color: $primary;
            transition: all $fast $bezier;
            
            .icon {
                width: 2rem;
                height: 2rem;
            }

            &:hover {
                opacity: $secondary;
            }
        }
    }
}

@media (min-width :  map-get($breakpoints, md)) {

    // Icon sizes
    .icon, .icon > svg {
        width: $icon-size-md;
        height: $icon-size-md;
    }

    // Lists
    .list {
        gap: 0;
    }

    $sp : $list-md-gap;
    .list, .list-md {
        justify-content: center;
        flex-wrap: wrap;
        flex-direction: row;

        margin-left: calc($sp * -1);
        margin-top: calc($sp * -1);
        margin-bottom: calc($sp * -1);
        width: calc(100% + ($sp * 2));

        &--2col, &--3col, &--4col {
            .list-item {
                width: calc(50% + ($sp * 2));
            }
        }
    }

    .sep-border::after {
        width: calc(100vw - map-get($sec-spacings, md-x) * 2);
        left: map-get($sec-spacings, md-x);
    }
}


@media (min-width :  map-get($breakpoints, lg)) {

    // Page menu
    .page-template-page-menu {
        object {
            padding-top: 10rem;
        }
    }

    // Icon sizes
    .icon, .icon > svg {
        width: $icon-size-lg;
        height: $icon-size-lg;
    }

    // Lists
    $sp : $list-lg-gap;
    .list, .list-md, .list-lg {

        margin-left: calc($sp * -1);
        margin-top: calc($sp * -1);
        margin-bottom: calc($sp * -1);
        width: calc(100% + ($sp * 2));

        &.list--2col, &.list--3col, &.list--4col {
            .list-item {
                margin: $sp;
            }
        }

        &.list--2col {
            .list-item {
                width: calc(50% - ($sp * 2));
            }
        }

        &.list--3col {
            .list-item {
                width: calc(33.33% - ($sp * 2));
            }
        }

        &.list--4col {
            .list-item {
                width: calc(25% - ($sp * 2));
            }
        }
    }

    .sep-border::after {
        width: calc(100vw - map-get($sec-spacings, lg-x) * 2);
        left: map-get($sec-spacings, lg-x);
    }
}


@media (min-width :  map-get($breakpoints, xl)) {
    .sep-border::after {
        width: calc(100vw - map-get($sec-spacings, xl-x) * 2);
        left: map-get($sec-spacings, xl-x);
    }
}
